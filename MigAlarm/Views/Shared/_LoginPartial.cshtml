@using MigAlarm.Helpers
@{ 
    var institutionInCookie = Request.Cookies["institution"];
}
@if (User.Identity.IsAuthenticated)
{
    using (Html.BeginForm("Logout", "User", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-brand">
            @if (institutionInCookie?.Value != null)
            {
                <li>
                    @{
                        var firstOrDefault = IdentityHelper.User.Roles.FirstOrDefault(r => r.InstitutionId.ToString() == institutionInCookie.Value);
                    }
                    @if (firstOrDefault != null)
                    {
                        @firstOrDefault.Institution.Name
                    }
                </li>
            }
        </ul>
        <ul class="nav navbar-nav navbar-right">
            <li>@Html.ActionLink(IdentityHelper.User.Forname + " " + IdentityHelper.User.Surname, string.Empty, string.Empty, null, new { title = "Manage" })</li>
            <li>@Html.ActionLink("Zmień hasło", "ChangePassword", "User", routeValues: null, htmlAttributes: new { id = "logoutLink" })</li>
            <li>@Html.ActionLink("Wyloguj", "Logout", "User", routeValues: null, htmlAttributes: new {id = "logoutLink"})</li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right dropdown-menu" role="menu">
        <li>@Html.ActionLink("Zaloguj", "Login", "User", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
